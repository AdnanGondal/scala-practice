[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(retcalc.ReturnsSpec, org.scalatest.tools.Framework$$anon$1@2278cfed, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(retcalc.RetCalcSpec, org.scalatest.tools.Framework$$anon$1@2278cfed, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mReturnsSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mVariableReturns.fromUntil[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should keep only a window of the returns[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRetCalcSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRetCalc.futureCapital[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should calculate the amount of savings I will have in n months[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRetCalc.futureCapital[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should calculate how much savings will be left after having taken a pension for n months[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRetCalc.simulatePlan[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should calculate the capital at retirement and capital after death[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRetCalc.nbOfMonthsSaving[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should calculate how long I need to save before I can retire[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not crash if the resulting nbOfMonths is very high[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not loop forever if I enter bad parameters[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 882 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 7[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 2, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 7, failed 0, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll tests passed.[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	retcalc.RetCalcSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	retcalc.ReturnsSpec[0m
